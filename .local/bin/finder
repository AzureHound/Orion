#!/bin/bash

monitor_focus() {
  finder_manually_opened=false
  last_app=""
  last_finder_state=""
  finder_focus_count=0

  while true; do
    current_app=$(osascript -e 'tell application "System Events" to get name of first application process whose frontmost is true' 2>/dev/null)

    if [ "$current_app" != "$last_app" ]; then
      if [ "$current_app" = "Finder" ]; then
        finder_focus_count=$((finder_focus_count + 1))

        if [ $finder_focus_count -eq 1 ]; then
          sleep 0.1
          still_finder=$(osascript -e 'tell application "System Events" to get name of first application process whose frontmost is true' 2>/dev/null)
          if [ "$still_finder" = "Finder" ]; then
            finder_manually_opened=true
          fi
        fi
      else
        finder_focus_count=0
        if [ "$last_app" = "Finder" ]; then
          finder_state=$(osascript -e 'tell application "Finder" to get visible' 2>/dev/null)
          if [ "$finder_state" = "false" ]; then
            finder_manually_opened=false
          fi
        fi
      fi
      last_app="$current_app"
    fi

    if [ "$current_app" = "Finder" ] && [ "$finder_manually_opened" = "false" ] && [ $finder_focus_count -gt 1 ]; then
      target_app=$(osascript -e 'tell application "System Events" to get name of first application process whose (visible is true and name is not "Finder")' 2>/dev/null)
      [ -n "$target_app" ] && osascript -e "tell application \"$target_app\" to activate" 2>/dev/null
    fi

    sleep 1
  done
}

start_monitor() {
  pid_file=~/.finder_focus_monitor.pid
  [ -f "$pid_file" ] && kill -0 "$(cat "$pid_file")" 2>/dev/null && {
    echo "Monitor already running"
    return 1
  }

  monitor_focus &
  echo $! >"$pid_file"
  echo "Monitor started with PID: $(cat "$pid_file")"
}

stop_monitor() {
  pid_file=~/.finder_focus_monitor.pid
  if [ -f "$pid_file" ]; then
    kill "$(cat "$pid_file")" 2>/dev/null && echo "Monitor stopped" || echo "Process not found"
    rm -f "$pid_file"
  else
    echo "No monitor running"
  fi
}

case "$1" in
start) start_monitor ;;
stop) stop_monitor ;;
restart)
  stop_monitor
  start_monitor
  ;;
status)
  pid_file=~/.finder_focus_monitor.pid
  [ -f "$pid_file" ] && kill -0 "$(cat "$pid_file")" 2>/dev/null &&
    echo "Monitor running with PID: $(cat "$pid_file")" || echo "Monitor not running"
  ;;
*)
  echo "Usage: $0 {start|stop|restart|status}"
  echo "Prevents accidental Finder focus switching while respecting manual usage"
  exit 1
  ;;
esac
